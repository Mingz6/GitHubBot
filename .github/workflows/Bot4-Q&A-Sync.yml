name: Bot4-Q&A Sync to Hugging Face Space

on:
  push:
    paths:
      - 'Bot4-Q&A/**'
      - '.github/workflows/Bot4-Q&A-Sync.yml'
    branches:
      - main
  workflow_dispatch: {}

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install git-lfs
        run: | 
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install

      - name: Prepare working copy (clone or init)
        run: |
          set -e
          rm -rf hf-space
          SRC_DIR="Bot4-Q&A"
          if [ ! -d "$SRC_DIR" ]; then
            echo "Expected source directory '$SRC_DIR' not found at $PWD" >&2
            ls -al
            exit 1
          fi
          if [ -z "${HF_TOKEN}" ]; then
            echo "HF_TOKEN is empty. Add a repository secret named HF_TOKEN with a Hugging Face write token." >&2
            exit 1
          fi
          echo "Cloning existing Hugging Face Space (if it exists)..."
          if git clone --depth 50 "https://MingZ6:${HF_TOKEN}@huggingface.co/spaces/MingZ6/QABot" hf-space; then
            echo "Clone succeeded.";
          else
            echo "Clone failed (likely first deployment). Initializing new repo." >&2
            mkdir -p hf-space
            ( cd hf-space && git init -b main )
          fi
          # Rsync into working copy root, excluding VCS metadata
          rsync -av --delete --exclude .git "${SRC_DIR}/" hf-space/
          echo "Rsync complete."
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}

      - name: Commit & push changes
        working-directory: hf-space
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          # Validate/repair remote
          if git remote get-url origin >/dev/null 2>&1; then
            if ! git remote get-url origin | grep -q 'huggingface.co/spaces/MingZ6/QABot'; then
              git remote set-url origin "https://MingZ6:${HF_TOKEN}@huggingface.co/spaces/MingZ6/QABot"
            fi
          else
            git remote add origin "https://MingZ6:${HF_TOKEN}@huggingface.co/spaces/MingZ6/QABot"
          fi
          # Ensure on main
          git checkout -B main || true
          # Incorporate remote changes if any
          git fetch origin main || true
          git reset --soft HEAD || true
          git pull --rebase origin main || true
          # Stage modifications
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit for space"
            exit 0
          fi
          SRC_SHA="${GITHUB_SHA::7}"
          CHANGED_LIST=$(git diff --cached --name-only | head -n 20 | tr '\n' ' ')
          FILE_COUNT=$(git diff --cached --name-only | wc -l | tr -d ' ')
          MSG="Sync Bot4-Q&A (repo ${SRC_SHA}) - ${FILE_COUNT} file(s): ${CHANGED_LIST}"
          git commit -m "${MSG}"
          git push origin main
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}

      - name: Done
        run: echo "Hugging Face space sync complete."
